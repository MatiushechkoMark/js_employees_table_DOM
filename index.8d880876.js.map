{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCEA,SAAS,gBAAgB,CAAC,mBAAoB,WAC5C,I,EAAM,EAAY,SAAS,aAAa,CAAC,SACnC,EAAQ,SAAS,aAAa,CAAC,SAC/B,E,A,S,C,E,G,M,O,C,G,O,E,E,E,EAAW,EAAM,IAAI,G,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,IAEvB,EAAe,KACf,EAAY,MAEhB,EAAU,gBAAgB,CAAC,QAAS,SAAC,CAArC,EACE,GAAI,EAAE,MAAM,CAAC,OAAO,CAAC,MAAO,CAC1B,IAAM,EAAS,EAAE,MAAM,CAAC,OAAO,CAAC,MAC1B,EAAW,EAAO,WAAW,CAC7B,EAAY,EAAO,SAAS,AAE9B,CAAA,IAAc,EAChB,EAAY,AAAc,QAAd,EAAsB,OAAS,OAE3C,EAAe,EACf,EAAY,OAGV,AAAc,QAAd,GACF,EAAK,IAAI,CAAC,SAAC,CAAA,CAAG,CAAd,EACE,OAAQ,GACN,IAAK,WACL,IAAK,OACL,IAAK,SACH,OAAO,EAAE,KAAK,CAAC,EAAU,CAAC,WAAW,CAAC,aAAa,CACjD,EAAE,KAAK,CAAC,EAAU,CAAC,WAAW,CAGlC,KAAK,SAUH,OAAO,AATS,EAAE,KAAK,CAAC,EAAU,CAAC,WAAW,CAAC,OAAO,CACpD,QACA,IAEc,EAAE,KAAK,CAAC,EAAU,CAAC,WAAW,CAAC,OAAO,CACpD,QACA,GAKJ,SACE,OACE,EAAE,KAAK,CAAC,EAAU,CAAC,WAAW,CAAG,EAAE,KAAK,CAAC,EAAU,CAAC,WAAW,AAErE,CACF,GAEA,EAAM,SAAS,CAAG,GAClB,EAAK,OAAO,CAAC,SAAC,CAAd,EAAsB,OAAA,EAAM,WAAW,CAAC,E,KAExC,EAAK,OAAO,GAEZ,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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    var tableHead = document.querySelector(\"thead\");\n    var tbody = document.querySelector(\"tbody\");\n    var rows = _to_consumable_array(tbody.rows);\n    var sortedColumn = null;\n    var sortOrder = \"asc\";\n    tableHead.addEventListener(\"click\", function(e) {\n        if (e.target.closest(\"th\")) {\n            var header = e.target.closest(\"th\");\n            var sortName = header.textContent;\n            var cellIndex = header.cellIndex;\n            if (cellIndex === sortedColumn) sortOrder = sortOrder === \"asc\" ? \"desc\" : \"asc\";\n            else {\n                sortedColumn = cellIndex;\n                sortOrder = \"asc\";\n            }\n            if (sortOrder === \"asc\") {\n                rows.sort(function(a, b) {\n                    switch(sortName){\n                        case \"Position\":\n                        case \"Name\":\n                        case \"Office\":\n                            return a.cells[cellIndex].textContent.localeCompare(b.cells[cellIndex].textContent);\n                        case \"Salary\":\n                            var salaryA = a.cells[cellIndex].textContent.replace(/[$,]/g, \"\");\n                            var salaryB = b.cells[cellIndex].textContent.replace(/[$,]/g, \"\");\n                            return salaryA - salaryB;\n                        default:\n                            return a.cells[cellIndex].textContent - b.cells[cellIndex].textContent;\n                    }\n                });\n                tbody.innerHTML = \"\";\n                rows.forEach(function(row) {\n                    return tbody.appendChild(row);\n                });\n            } else {\n                rows.reverse();\n                tbody.innerHTML = \"\";\n                rows.forEach(function(row) {\n                    return tbody.appendChild(row);\n                });\n            }\n        }\n    });\n    var selectedRow = null;\n    tbody.addEventListener(\"click\", function(e) {\n        var row = e.target.closest(\"tr\");\n        var rowIndex = row.sectionRowIndex;\n        if (selectedRow === null) {\n            tbody.rows[rowIndex].classList.add(\"active\");\n            selectedRow = rowIndex;\n        } else {\n            tbody.rows[selectedRow].classList.remove(\"active\");\n            selectedRow = rowIndex;\n            tbody.rows[rowIndex].classList.add(\"active\");\n        }\n    });\n    var form = document.createElement(\"form\");\n    form.classList.add(\"new-employee-form\");\n    form.noValidate = true;\n    document.body.appendChild(form);\n    var countries = [\n        \"Tokyo\",\n        \"Singapore\",\n        \"London\",\n        \"New York\",\n        \"Edinburgh\",\n        \"San Francisco\"\n    ];\n    var formName = '<label>Name: <input name=\"name\" data-qa=\"name\" type=\"text\"></label>';\n    var formPosition = '<label>Position:\\n  <input name=\"position\" data-qa=\"position\" type=\"text\"></label>';\n    var formCountry = '\\n    <label> Country:\\n    <select name=\"office\" data-qa=\"office\">\\n      '.concat(countries.map(function(country) {\n        return '<option value=\"'.concat(country, '\">').concat(country, \"</option>\");\n    }).join(\"\"), \"\\n    </select>\\n    </label>\");\n    var formAge = '<label>Age:\\n    <input name=\"age\" data-qa=\"age\" type=\"number\">\\n  </label>';\n    var formSalary = '<label>Salary: <input name=\"salary\"\\n     data-qa=\"salary\"\\n     type=\"number\">\\n    </label>';\n    var button = \"<button>Save to table</button>\";\n    form.insertAdjacentHTML(\"afterbegin\", button);\n    form.insertAdjacentHTML(\"afterbegin\", formSalary);\n    form.insertAdjacentHTML(\"afterbegin\", formAge);\n    form.insertAdjacentHTML(\"afterbegin\", formCountry);\n    form.insertAdjacentHTML(\"afterbegin\", formPosition);\n    form.insertAdjacentHTML(\"afterbegin\", formName);\n    var inputs = form.querySelectorAll(\"input\");\n    inputs.forEach(function(input) {\n        return input.setAttribute(\"required\", \"\");\n    });\n    var createNotification = function(text, className) {\n        var notification = document.createElement(\"div\");\n        notification.classList.add(\"notification\", className);\n        notification.setAttribute(\"data-qa\", \"notification\");\n        var desctiption = document.createElement(\"h1\");\n        desctiption.classList.add(\"title\");\n        desctiption.textContent = text;\n        notification.appendChild(desctiption);\n        return notification;\n    };\n    form.addEventListener(\"submit\", function(e) {\n        e.preventDefault();\n        var nameNew = form.querySelector('[data-qa=\"name\"]').value;\n        var position = form.querySelector('[data-qa=\"position\"]').value;\n        var age = form.querySelector('[data-qa=\"age\"]').value;\n        var salary = form.querySelector('[data-qa=\"salary\"]').value;\n        var office = form.querySelector('[data-qa=\"office\"]').value;\n        var isValid = true;\n        var message = \"\";\n        if (nameNew.trim().length < 4) {\n            message = \"Name value has less than 4 letters\";\n            isValid = false;\n        } else if (position.trim().length === 0) {\n            message = \"Position value is invalid\";\n            isValid = false;\n        } else if (age < 18 || age > 90) {\n            message = \"Age value is less than 18 or more than 90\";\n            isValid = false;\n        } else if (salary.trim().length === 0) {\n            message = \"Salary value is invalid\";\n            isValid = false;\n        }\n        if (!isValid) document.body.append(createNotification(message, \"error\"));\n        else {\n            document.body.append(createNotification(\"Employee successfully added\", \"success\"));\n            var newPerson = [\n                nameNew.trim(),\n                position.trim(),\n                office,\n                age,\n                \"$\".concat((+(salary / 1000)).toFixed(3).replace(\".\", \",\"))\n            ];\n            var newRow = tbody.insertRow(-1);\n            newPerson.forEach(function(item, index) {\n                var cell = newRow.insertCell(index);\n                cell.innerText = item;\n            });\n            rows.push(newRow);\n            form.reset();\n        }\n        setTimeout(function() {\n            var notifications = document.querySelectorAll(\".notification\");\n            notifications.forEach(function(notification) {\n                notification.parentNode.removeChild(notification);\n            });\n        }, 3000);\n    });\n    tbody.addEventListener(\"dblclick\", function(e) {\n        var cell = e.target;\n        var editedCell = cell.textContent;\n        cell.innerHTML = \"<input class='cell-input' value='\".concat(editedCell, \"' />\");\n        var input = e.target.querySelector(\".cell-input\");\n        input.focus();\n        var saveChanges = function(y) {\n            if (y.type === \"blur\" || y.type === \"keyup\" && y.key === \"Enter\") {\n                var newText = y.target.value.trim() || editedCell;\n                cell.innerText = newText;\n                editedCell = null;\n            }\n        };\n        input.addEventListener(\"blur\", saveChanges);\n        input.addEventListener(\"keyup\", saveChanges);\n    });\n});\n\n//# sourceMappingURL=index.8d880876.js.map\n","'use strict';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const tableHead = document.querySelector('thead');\n  const tbody = document.querySelector('tbody');\n  const rows = [...tbody.rows];\n\n  let sortedColumn = null;\n  let sortOrder = 'asc';\n\n  tableHead.addEventListener('click', (e) => {\n    if (e.target.closest('th')) {\n      const header = e.target.closest('th');\n      const sortName = header.textContent;\n      const cellIndex = header.cellIndex;\n\n      if (cellIndex === sortedColumn) {\n        sortOrder = sortOrder === 'asc' ? 'desc' : 'asc';\n      } else {\n        sortedColumn = cellIndex;\n        sortOrder = 'asc';\n      }\n\n      if (sortOrder === 'asc') {\n        rows.sort((a, b) => {\n          switch (sortName) {\n            case 'Position':\n            case 'Name':\n            case 'Office':\n              return a.cells[cellIndex].textContent.localeCompare(\n                b.cells[cellIndex].textContent,\n              );\n\n            case 'Salary':\n              const salaryA = a.cells[cellIndex].textContent.replace(\n                /[$,]/g,\n                '',\n              );\n              const salaryB = b.cells[cellIndex].textContent.replace(\n                /[$,]/g,\n                '',\n              );\n\n              return salaryA - salaryB;\n\n            default:\n              return (\n                a.cells[cellIndex].textContent - b.cells[cellIndex].textContent\n              );\n          }\n        });\n\n        tbody.innerHTML = '';\n        rows.forEach((row) => tbody.appendChild(row));\n      } else {\n        rows.reverse();\n\n        tbody.innerHTML = '';\n        rows.forEach((row) => tbody.appendChild(row));\n      }\n    }\n  });\n\n  let selectedRow = null;\n\n  tbody.addEventListener('click', (e) => {\n    const row = e.target.closest('tr');\n    const rowIndex = row.sectionRowIndex;\n\n    if (selectedRow === null) {\n      tbody.rows[rowIndex].classList.add('active');\n      selectedRow = rowIndex;\n    } else {\n      tbody.rows[selectedRow].classList.remove('active');\n      selectedRow = rowIndex;\n      tbody.rows[rowIndex].classList.add('active');\n    }\n  });\n\n  const form = document.createElement('form');\n\n  form.classList.add('new-employee-form');\n  form.noValidate = true;\n  document.body.appendChild(form);\n\n  const countries = [\n    'Tokyo',\n    'Singapore',\n    'London',\n    'New York',\n    'Edinburgh',\n    'San Francisco',\n  ];\n\n  const formName =\n    '<label>Name: <input name=\"name\" data-qa=\"name\" type=\"text\"></label>';\n  const formPosition = `<label>Position:\n  <input name=\"position\" data-qa=\"position\" type=\"text\"></label>`;\n  const formCountry = `\n    <label> Country:\n    <select name=\"office\" data-qa=\"office\">\n      ${countries.map((country) => `<option value=\"${country}\">${country}</option>`).join('')}\n    </select>\n    </label>`;\n  const formAge = `<label>Age:\n    <input name=\"age\" data-qa=\"age\" type=\"number\">\n  </label>`;\n  const formSalary = `<label>Salary: <input name=\"salary\"\n     data-qa=\"salary\"\n     type=\"number\">\n    </label>`;\n  const button = '<button>Save to table</button>';\n\n  form.insertAdjacentHTML('afterbegin', button);\n  form.insertAdjacentHTML('afterbegin', formSalary);\n  form.insertAdjacentHTML('afterbegin', formAge);\n  form.insertAdjacentHTML('afterbegin', formCountry);\n  form.insertAdjacentHTML('afterbegin', formPosition);\n  form.insertAdjacentHTML('afterbegin', formName);\n\n  const inputs = form.querySelectorAll('input');\n\n  inputs.forEach((input) => input.setAttribute('required', ''));\n\n  const createNotification = (text, className) => {\n    const notification = document.createElement('div');\n\n    notification.classList.add('notification', className);\n    notification.setAttribute('data-qa', 'notification');\n\n    const desctiption = document.createElement('h1');\n\n    desctiption.classList.add('title');\n    desctiption.textContent = text;\n    notification.appendChild(desctiption);\n\n    return notification;\n  };\n\n  form.addEventListener('submit', (e) => {\n    e.preventDefault();\n\n    const nameNew = form.querySelector('[data-qa=\"name\"]').value;\n    const position = form.querySelector('[data-qa=\"position\"]').value;\n    const age = form.querySelector('[data-qa=\"age\"]').value;\n    const salary = form.querySelector('[data-qa=\"salary\"]').value;\n    const office = form.querySelector('[data-qa=\"office\"]').value;\n\n    let isValid = true;\n    let message = '';\n\n    if (nameNew.trim().length < 4) {\n      message = 'Name value has less than 4 letters';\n      isValid = false;\n    } else if (position.trim().length === 0) {\n      message = 'Position value is invalid';\n      isValid = false;\n    } else if (age < 18 || age > 90) {\n      message = 'Age value is less than 18 or more than 90';\n      isValid = false;\n    } else if (salary.trim().length === 0) {\n      message = 'Salary value is invalid';\n      isValid = false;\n    }\n\n    if (!isValid) {\n      document.body.append(createNotification(message, 'error'));\n    } else {\n      document.body.append(\n        createNotification('Employee successfully added', 'success'),\n      );\n\n      const newPerson = [\n        nameNew.trim(),\n        position.trim(),\n        office,\n        age,\n        `$${(+(salary / 1000)).toFixed(3).replace('.', ',')}`,\n      ];\n\n      const newRow = tbody.insertRow(-1);\n\n      newPerson.forEach((item, index) => {\n        const cell = newRow.insertCell(index);\n\n        cell.innerText = item;\n      });\n\n      rows.push(newRow);\n      form.reset();\n    }\n\n    setTimeout(() => {\n      const notifications = document.querySelectorAll('.notification');\n\n      notifications.forEach((notification) => {\n        notification.parentNode.removeChild(notification);\n      });\n    }, 3000);\n  });\n\n  tbody.addEventListener('dblclick', (e) => {\n    const cell = e.target;\n    let editedCell = cell.textContent;\n\n    cell.innerHTML = `<input class='cell-input' value='${editedCell}' />`;\n\n    const input = e.target.querySelector('.cell-input');\n\n    input.focus();\n\n    const saveChanges = (y) => {\n      if (y.type === 'blur' || (y.type === 'keyup' && y.key === 'Enter')) {\n        const newText = y.target.value.trim() || editedCell;\n\n        cell.innerText = newText;\n        editedCell = null;\n      }\n    };\n\n    input.addEventListener('blur', saveChanges);\n    input.addEventListener('keyup', saveChanges);\n  });\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","document","addEventListener","tableHead","querySelector","tbody","rows","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","sortedColumn","sortOrder","e","target","closest","header","sortName","textContent","cellIndex","sort","a","b","cells","localeCompare","salaryA","replace","innerHTML","forEach","row","appendChild","reverse","selectedRow","rowIndex","sectionRowIndex","classList","add","remove","form","createElement","noValidate","body","formCountry","concat","countries","map","country","join","insertAdjacentHTML","inputs","querySelectorAll","input","setAttribute","createNotification","text","className","notification","desctiption","preventDefault","nameNew","value","position","age","salary","office","isValid","message","trim","append","newPerson","toFixed","newRow","insertRow","item","index","cell","insertCell","innerText","push","reset","setTimeout","notifications","parentNode","removeChild","editedCell","focus","saveChanges","y","type","key","newText"],"version":3,"file":"index.8d880876.js.map"}